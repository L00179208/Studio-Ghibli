name: Deploy Application to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Capture Instance IP
        id: capture_ip
        run: echo "INSTANCE_IP=$(terraform output -raw instance_ip)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Install dependencies for admin frontend
        working-directory: ./admin_frontend
        run: npm install --legacy-peer-deps

      - name: Build admin frontend
        working-directory: ./admin_frontend
        run: npm run build

      - name: Install dependencies for studio-ghibli frontend
        working-directory: ./frontend/studio-ghibli
        run: npm install --legacy-peer-deps

      - name: Build studio-ghibli frontend
        working-directory: ./frontend/studio-ghibli
        run: npm run build

      - name: Install dependencies for course backend
        working-directory: ./backend/course
        run: npm install --legacy-peer-deps

      - name: Install dependencies for customers backend
        working-directory: ./backend/customers
        run: npm install --legacy-peer-deps

      - name: Install dependencies for enrollment backend
        working-directory: ./backend/enrollment
        run: npm install --legacy-peer-deps

      - name: Install dependencies for gateway backend
        working-directory: ./backend/gateway
        run: npm install --legacy-peer-deps

      - name: Deploy Docker Compose
        env:
          INSTANCE_IP: ${{ env.INSTANCE_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > ssh_key.pem
          chmod 600 ssh_key.pem
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@$INSTANCE_IP << EOF
            cd /home/ubuntu/your_project_directory
            git pull origin master
            sudo docker-compose down
            sudo docker-compose up -d --build
          EOF
