name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Fetches the entire repository code

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          IMAGE_TAG: ${{ github.sha }}
        # Execute commands in each directory
        # Replace 'admin_frontend', 'studio-ghibli', etc., with your actual directory names
        # Ensure the Dockerfiles are correctly located in each directory
        # Adjust docker build and tagging as per your Dockerfile structure
        # Example assumes Dockerfile is located in 'Dockerfiles/Dockerfile'
        run: |
          cd admin_frontend
          docker build -t $DOCKER_USERNAME/andsgproject/admin_frontend:$IMAGE_TAG -f Dockerfiles/Dockerfile .
          cd ..

          cd frontend/studio-ghibli
          docker build -t $DOCKER_USERNAME/andsgproject/studio_ghibli_frontend:$IMAGE_TAG -f Dockerfiles/Dockerfile .
          cd ..

          cd backend/gateway
          docker build -t $DOCKER_USERNAME/andsgproject/gateway:$IMAGE_TAG -f Dockerfiles/Dockerfile .
          cd ..

          cd backend/courses
          docker build -t $DOCKER_USERNAME/andsgproject/courses:$IMAGE_TAG -f Dockerfiles/Dockerfile .
          cd ..

          cd ./backend/enrollment
          docker build -t $DOCKER_USERNAME/andsgproject/enrollment:$IMAGE_TAG -f Dockerfiles/Dockerfile .
          cd ..

          cd ./backend/customers
          docker build -t $DOCKER_USERNAME/andsgproject/customers:$IMAGE_TAG -f Dockerfiles/Dockerfile .
          cd ..

          cd ./backend/users
          docker build -t $DOCKER_USERNAME/andsgproject/users:$IMAGE_TAG -f Dockerfiles/Dockerfile .
          cd ..

          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

          docker push $DOCKER_USERNAME/andsgproject/admin_frontend:$IMAGE_TAG
          docker push $DOCKER_USERNAME/andsgproject/studio_ghibli_frontend:$IMAGE_TAG
          docker push $DOCKER_USERNAME/andsgproject/gateway:$IMAGE_TAG
          docker push $DOCKER_USERNAME/andsgproject/courses:$IMAGE_TAG
          docker push $DOCKER_USERNAME/andsgproject/enrollment:$IMAGE_TAG
          docker push $DOCKER_USERNAME/andsgproject/customers:$IMAGE_TAG
          docker push $DOCKER_USERNAME/andsgproject/users:$IMAGE_TAG

      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          debug: true
          script: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "IMAGE_TAG=${{ github.sha }} bash -s" < deploy.sh
