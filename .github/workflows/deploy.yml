# name: Deploy to EC2

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2  # Fetches the entire repository code

#       - name: Print EC2 Host and Username
#         run: |
#           echo "EC2_HOST: $EC2_HOST"
#           echo "EC2_USERNAME: $EC2_USERNAME"      

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker images
#         env:
#           DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
        
#           set -e  # Exit immediately if a command exits with a non-zero status

#           # Build and push Docker images for each service
#           build_and_push() {
#             local service_directory=$1
#             local service_name=$2

#             if [ -d "$service_directory" ]; then
#               cd $service_directory
#               docker build -t $DOCKER_USERNAME/sgproject:$service_name -f Dockerfiles/Dockerfile .
#               docker tag $DOCKER_USERNAME/sgproject:$service_name $DOCKER_USERNAME/sgproject:$service_name-$IMAGE_TAG
#               echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
#               docker push $DOCKER_USERNAME/sgproject:$service_name-$IMAGE_TAG
#               cd $( [[ "$service_directory" == "frontend/studio-ghibli" || "$service_directory" == "backend"* ]] && echo "../.." || echo ".." )
#             else
#               echo "Directory $service_directory not found."
#               exit 1
#             fi
#           }

#           build_and_push "admin_frontend" "admin_frontend"
#           build_and_push "frontend/studio-ghibli" "studio_ghibli_frontend"
#           build_and_push "backend/gateway" "gateway"
#           build_and_push "backend/courses" "courses"
#           build_and_push "backend/enrollment" "enrollment"
#           build_and_push "backend/customers" "customers"
#           build_and_push "backend/users" "users"

#       - name: SSH Deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           port: 22
#           script: |
#             ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "bash -s" < deploy.sh $IMAGE_TAG $DOCKER_USERNAME $DOCKER_PASSWORD

